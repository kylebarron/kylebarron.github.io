{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-geoarrow-and-geoparquet-in-deck-gl-mdx-92968d1da21911e668b5.js","mappings":"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","sources":["webpack://kylebarron.github.io/./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","webpack://kylebarron.github.io/./content/posts/geoarrow-and-geoparquet-in-deck-gl.mdx","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx"],"sourcesContent":["function _objectDestructuringEmpty(t) {\n  if (null == t) throw new TypeError(\"Cannot destructure \" + t);\n}\nexport { _objectDestructuringEmpty as default };","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Posted on Observable (\", React.createElement(_components.a, {\n    href: \"https://observablehq.com/@kylebarron/geoarrow-and-geoparquet-in-deck-gl\"\n  }, \"https://observablehq.com/@kylebarron/geoarrow-and-geoparquet-in-deck-gl\"), \"), and embedded below:\"), \"\\n\", React.createElement(\"iframe\", {\n    width: \"100%\",\n    height: \"800\",\n    frameborder: \"0\",\n    allowtransparency: \"true\",\n    style: {\n      background: \"#FFFFFF\"\n    },\n    src: \"https://observablehq.com/embed/@kylebarron/geoarrow-and-geoparquet-in-deck-gl?cell=*\"\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/kyle/github/kylebarron/kylebarron.github.io/content/posts/geoarrow-and-geoparquet-in-deck-gl.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n"],"names":["_objectDestructuringEmpty","t","TypeError","_createMdxContent","props","_components","Object","assign","p","a","_provideComponents","components","React","href","width","height","frameborder","allowtransparency","style","background","src","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX","_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","fontSize","date","tags","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","Post","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","name","content","property","rel","type","sizes","withPrefix","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","_t$styles","styles","to","replaceSlashes"],"sourceRoot":""}