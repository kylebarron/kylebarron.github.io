{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-tag-query-tsx-b686ef5d6f8a3bc69f58.js","mappings":"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","sources":["webpack://kylebarron.github.io/./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/tag.tsx","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/tag-query.tsx","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/tag.tsx","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"sourcesContent":["function _objectDestructuringEmpty(t) {\n  if (null == t) throw new TypeError(\"Cannot destructure \" + t);\n}\nexport { _objectDestructuringEmpty as default };","/** @jsx jsx */\nimport { jsx, Heading, Flex } from \"theme-ui\"\nimport { HeadFC, Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport Listing from \"./listing\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport Seo from \"./seo\"\n\nexport type MBTagProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean\n    slug: string\n    name: string\n  }\n}\n\nconst Tag = ({ posts, pageContext }: MBTagProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\n        <Heading as=\"h1\" variant=\"styles.h1\" sx={{ marginY: 2 }}>\n          {pageContext.name}\n        </Heading>\n        <Link\n          sx={(t) => ({ ...t.styles?.a, variant: `links.secondary`, marginY: 2 })}\n          to={replaceSlashes(`/${basePath}/${tagsPath}`)}\n        >\n          View all tags\n        </Link>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  )\n}\n\nexport default Tag\n\nexport const Head: HeadFC<unknown, { name: string }> = ({ pageContext }) => <Seo title={`Tag: ${pageContext.name}`} />\n","import { graphql } from \"gatsby\"\nimport TagComponent, { Head } from \"../components/tag\"\n\nexport default TagComponent\n\nexport { Head }\n\nexport const query = graphql`\n  query ($slug: String!, $formatString: String!) {\n    allPost(sort: { date: DESC }, filter: { tags: { elemMatch: { slug: { eq: $slug } } } }) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Tag, { Head } from \"../../../components/tag\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: any\n  }\n  pageContext: {\n    isCreatedByStatefulCreatePages: boolean\n    slug: string\n    name: string\n    [key: string]: any\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreTag({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Tag posts={allPost.nodes} {...props} />\n}\n\nexport { Head }\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"names":["_objectDestructuringEmpty","t","TypeError","_ref","posts","pageContext","tagsPath","basePath","useMinimalBlogConfig","jsx","Layout","Flex","sx","alignItems","justifyContent","flexFlow","Heading","as","variant","marginY","name","Link","_t$styles","Object","assign","styles","a","to","replaceSlashes","Listing","mt","Head","_ref2","Seo","title","props","data","allPost","React","Tag","nodes","description","pathname","image","children","canonicalUrl","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","tags","map","tag","i","key","slug","post","showTags","Box","mb","fontSize","color","date","ItemTags","className","BlogListItem"],"sourceRoot":""}