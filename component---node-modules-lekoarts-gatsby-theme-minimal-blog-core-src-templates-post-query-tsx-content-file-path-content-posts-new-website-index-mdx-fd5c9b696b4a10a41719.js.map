{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-new-website-index-mdx-fd5c9b696b4a10a41719.js","mappings":"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","sources":["webpack://kylebarron.github.io/./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://kylebarron.github.io/./content/posts/new-website/index.mdx","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx"],"sourcesContent":["function _objectDestructuringEmpty(t) {\n  if (null == t) throw new TypeError(\"Cannot destructure \" + t);\n}\nexport { _objectDestructuringEmpty as default };","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    em: \"em\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"After a few years of having a semi-dead \", React.createElement(_components.a, {\n    href: \"https://jekyllrb.com/\"\n  }, \"Jekyll\"), \"-based website, I'm happy to transition to a new website based on \", React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.org/\"\n  }, \"GatsbyJS\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"I'm excited for this switch because I can incorporate some cool new technologies\\ninto the site. For example, \", React.createElement(_components.a, {\n    href: \"https://github.com/kylebarron/kylebarron.github.io/blob/source/content/posts/new-website/index.mdx\"\n  }, \"this post\"), \" is written in \", React.createElement(_components.a, {\n    href: \"https://mdxjs.com/\"\n  }, React.createElement(_components.em, null, \"MDX\")), \",\\nwhich allows you to combine the simplicity of Markdown with the flexibility of\\nReact.\"), \"\\n\", React.createElement(_components.p, null, \"For example, I can have editable code snippets that accept updates from the user, like this:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"const onClick = () => {\\n  alert(\\\"Change this text\\\");\\n};\\nrender(<button onClick={onClick}>Click me!</button>);\\n\")), \"\\n\", React.createElement(_components.p, null, \"Update \", React.createElement(_components.code, null, \"Change this text\"), \", click the button, and you can see the text you just\\nput in!\"), \"\\n\", React.createElement(_components.p, null, \"I'm using \", React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.org/starters/lekoarts/gatsby-starter-minimal-blog/\"\n  }, \"this starter\"), \", which helped to get everything set up.\\nThe website is hosted on Github Pages, and builds and deploys automatically on\\nevery new commit using Travis CI, so I can just write and commit! Everything is\\nopen source at \", React.createElement(_components.a, {\n    href: \"https://github.com/kylebarron/kylebarron.github.io\"\n  }, \"https://github.com/kylebarron/kylebarron.github.io\"), \".\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/kyle/github/kylebarron/kylebarron.github.io/content/posts/new-website/index.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n"],"names":["_objectDestructuringEmpty","t","TypeError","_ref","post","shadow","map","v","data","children","jsx","Layout","Heading","as","variant","title","sx","color","mt","a","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","props","Object","assign","Post","_createMdxContent","_components","p","em","pre","code","_provideComponents","components","href","className","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","name","content","property","rel","type","sizes","withPrefix","tagsPath","basePath","useMinimalBlogConfig","tag","i","key","Link","_t$styles","styles","to","replaceSlashes"],"sourceRoot":""}