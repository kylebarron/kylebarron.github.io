{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-content-file-path-content-posts-reading-stata-files-with-python-mdx-301784f0fb3861b64246.js","mappings":"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","sources":["webpack://kylebarron.github.io/./node_modules/@matejmazur/react-katex/dist/react-katex.js","webpack://kylebarron.github.io/./node_modules/@matejmazur/react-katex/node_modules/prop-types/factoryWithThrowingShims.js","webpack://kylebarron.github.io/./node_modules/@matejmazur/react-katex/node_modules/prop-types/index.js","webpack://kylebarron.github.io/./node_modules/@matejmazur/react-katex/node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post-footer.tsx","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/post.tsx","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx","webpack://kylebarron.github.io/./content/posts/reading-stata-files-with-python.mdx","webpack://kylebarron.github.io/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx"],"sourcesContent":["function r(r){return r&&\"object\"==typeof r&&\"default\"in r?r.default:r}var e=require(\"react\"),t=r(e),n=r(require(\"prop-types\")),o=r(require(\"katex\"));function s(r){var e,n,s=(e=[\"children\",\"math\",\"block\",\"errorColor\",\"renderError\",\"settings\"],n=r,Object.keys(n).reduce(function(r,t){return e.includes(t)?r:(r[t]=n[t],r)},{})),c=r.block?\"div\":\"span\",i=r.children||r.math;try{var a=o.renderToString(i,Object.assign({},{displayMode:!!r.block,errorColor:r.errorColor,throwOnError:!!r.renderError},r.settings));return t.createElement(c,Object.assign({},s,{dangerouslySetInnerHTML:{__html:a}}))}catch(e){if(e instanceof o.ParseError||e instanceof TypeError)return r.renderError?r.renderError(e):t.createElement(c,Object.assign({},s,{dangerouslySetInnerHTML:{__html:e.message}}));throw e}}s.propTypes={children:n.string,math:n.string,block:n.bool,errorColor:n.string,renderError:n.func,settings:n.object};var c=e.memo(s);module.exports=c;\n//# sourceMappingURL=react-katex.js.map\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport * as React from \"react\"\nimport type { MBPostProps } from \"./post\"\n\nconst PostFooter = ({ post }: MBPostProps) => null\n\nexport default PostFooter\n","/** @jsx jsx */\nimport type { HeadFC, PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport { jsx, Heading } from \"theme-ui\"\nimport Layout from \"./layout\"\nimport ItemTags from \"./item-tags\"\nimport Seo from \"./seo\"\nimport PostFooter from \"./post-footer\"\n\nexport type MBPostProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    tags?: {\n      name: string\n      slug: string\n    }[]\n    description?: string\n    canonicalUrl?: string\n    excerpt: string\n    timeToRead?: number\n    banner?: {\n      childImageSharp: {\n        resize: {\n          src: string\n        }\n      }\n    }\n  }\n}\n\nconst px = [`16px`, `8px`, `4px`]\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.1) 0px ${v} ${v} 0px`)\n\nconst Post: React.FC<React.PropsWithChildren<PageProps<MBPostProps>>> = ({ data: { post }, children }) => (\n  <Layout>\n    <Heading as=\"h1\" variant=\"styles.h1\">\n      {post.title}\n    </Heading>\n    <p sx={{ color: `secondary`, mt: 3, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          borderRadius: `4px`,\n          boxShadow: shadow.join(`, `),\n          \".gatsby-resp-image-image\": {\n            borderRadius: `4px`,\n          },\n        },\n        variant: `layout.content`,\n      }}\n    >\n      {children}\n    </section>\n    <PostFooter post={post} />\n  </Layout>\n)\n\nexport default Post\n\nexport const Head: HeadFC<MBPostProps> = ({ data: { post } }) => (\n  <Seo\n    title={post.title}\n    description={post.description ? post.description : post.excerpt}\n    image={post.banner ? post.banner?.childImageSharp?.resize?.src : undefined}\n    pathname={post.slug}\n    canonicalUrl={post.canonicalUrl}\n  />\n)\n","import type { PageProps } from \"gatsby\"\nimport * as React from \"react\"\nimport Post, { Head, MBPostProps } from \"../../../components/post\"\n\nexport default function MinimalBlogCorePost({ ...props }: PageProps<MBPostProps>) {\n  return <Post {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport 'katex/dist/katex.min.css';\nimport TeX from '@matejmazur/react-katex';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    em: \"em\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Stata is fine for the small stuff, but Python is way better for anything\\nintensive. However, you'll often have data in Stata's \", React.createElement(_components.code, null, \".dta\"), \" format that you\\nneed to read. This post will detail the nice features available in Python's\\nStata import.\"), \"\\n\", React.createElement(_components.p, null, \"We'll use the 1978 Automobile Data that comes with Stata. First export this data into a file in your working directory:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-stata\"\n  }, \"sysuse auto\\nsave \\\"auto.dta\\\", replace\\n\")), \"\\n\", React.createElement(_components.p, null, \"Now open up Python. First import Pandas, the module in Python used to work with rectangular data frames.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"import pandas as pd\\n\")), \"\\n\", React.createElement(_components.p, null, \"The most straightforward way to import a Stata file is a single line:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"auto = pd.read_stata('auto.dta')\\n\")), \"\\n\", React.createElement(_components.p, null, \"This is really simple, and is fine for small files, but with larger files, you often need to finesse your data import.\\nImagine you have a 100GB Stata file. For most computers, that's too big to import into memory.\"), \"\\n\", React.createElement(_components.p, null, \"First we need to create an \", React.createElement(_components.em, null, \"iterator\"), \", which reads the metadata attached to the \", React.createElement(_components.code, null, \".dta\"), \" file, but importantly doesn't read the data itself yet.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"itr = pd.read_stata('auto.dta', iterator = True)\\n\")), \"\\n\", React.createElement(_components.p, null, \"Now it's possible to read in just a chunk of the data at a time.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"auto = itr.get_chunk(5)\\n\")), \"\\n\", React.createElement(_components.p, null, \"You can also easily loop over the data like so:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"itr = pd.read_stata('auto.dta', iterator = True, chunksize = 10)\\nfor df in itr:\\n    # Program operating on 10 rows of the dataset at a time\\n\\n\")), \"\\n\", React.createElement(_components.p, null, \"Now without importing the file, we can get the data label, number of observations, number of variables, and the timestamp at which the data were last saved.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"itr.data_label\\nitr.nobs\\nitr.nvar\\nitr.time_stamp\\n\")), \"\\n\", React.createElement(_components.p, null, \"If we want to see the names and labels of the variables, we can use\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"itr.varlist\\nitr.variable_labels()\\n\")), \"\\n\", React.createElement(_components.p, null, \"Note that \", React.createElement(_components.code, null, \"itr.variable_labels()\"), \" returns a dictionary where the keys of the dictionary are the variable names and the values of the dictionary are the variable labels. So we can access the labels with something like:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"labels = itr.variable_labels()\\n# Gets the label of `mpg`\\nlabels['mpg']\\n# Gets all keys\\nlabels.keys()\\n# Gets all values\\nlabels.values()\\n\")), \"\\n\", React.createElement(_components.p, null, \"If you're working with a large dataset that might run up against memory constraints, you might want to keep in mind exactly how much memory the imported data will take up.\"), \"\\n\", React.createElement(_components.p, null, \"You can get a list of the number of bytes each column takes up with the \", React.createElement(_components.code, null, \"col_sizes\"), \" method:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"itr.col_sizes\\n\")), \"\\n\", React.createElement(_components.p, null, \"So in \", React.createElement(_components.code, null, \"auto.dta\"), \", the first column takes up 18 bytes for each row, while the rest of the columns take up between 1 and 4 bytes.\"), \"\\n\", React.createElement(_components.p, null, \"Lets get a better idea of what data types these columns are.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"itr.dtyplist\\nitr.fmtlist\\n\")), \"\\n\", React.createElement(_components.p, null, \"The former shows you the data types that will be used in Python upon import and the latter shows the display formats the data had used in Stata (see \", React.createElement(_components.a, {\n    href: \"https://www.stata.com/help.cgi?format\"\n  }, React.createElement(_components.code, null, \"help format\")), \").\"), \"\\n\", React.createElement(_components.p, null, \"From \", React.createElement(_components.code, null, \"itr.dtyplist\"), \", we can see that the first column is a string of length 18, while the rest are types \", React.createElement(_components.code, null, \"numpy.int8\"), \", \", React.createElement(_components.code, null, \"numpy.int16\"), \", and \", React.createElement(_components.code, null, \"numpy.float32\"), \". These data types come from \", React.createElement(_components.a, {\n    href: \"http://www.numpy.org/\"\n  }, \"Numpy\"), \", a scientific library that Pandas is based upon, and correspond to Stata's \", React.createElement(_components.code, null, \"byte\"), \", \", React.createElement(_components.code, null, \"int\"), \", and \", React.createElement(_components.code, null, \"float\"), \", respectively (see Stata's \", React.createElement(_components.a, {\n    href: \"https://www.stata.com/help.cgi?datatypes\"\n  }, React.createElement(_components.code, null, \"help data types\")), \").\"), \"\\n\", React.createElement(_components.p, null, \"The size of the data in memory is almost exactly the number of rows times the sum of the number of bytes needed for each row. I.e. if the number of rows is\"), \"\\n\", React.createElement(TeX, {\n    math: \"N\"\n  }), \"\\n\", React.createElement(_components.p, null, \"and the number of bytes each column uses is\"), \"\\n\", React.createElement(TeX, {\n    math: \"B_{col}\"\n  }), \"\\n\", React.createElement(_components.p, null, \"then the total memory use of the dataset is\"), \"\\n\", React.createElement(TeX, {\n    math: \"N * \\\\sum_{col} B_{col}\"\n  }), \"\\n\", React.createElement(_components.p, null, \"This can be helpful with understanding how many rows of a file to import at once. Let's say you want to not use more than 1GB of memory at once. If you want to import all columns of \", React.createElement(_components.code, null, \"auto.dta\"), \", each row takes up \", React.createElement(_components.code, null, \"sum(itr.col_sizes)\"), \" = 43 bytes. So the number of rows you can import at a time is\"), \"\\n\", React.createElement(TeX, {\n    math: \"1024 MB * \\\\frac{1024 KB}{1 MB} * \\\\frac{1024 B}{1 KB} * \\\\frac{1 \\\\text{ row}}{43 B} \\\\approx 25 \\\\text{ million rows}\",\n    block: true\n  }), \"\\n\", React.createElement(_components.p, null, \"Obviously with the \", React.createElement(_components.code, null, \"auto.dta\"), \" dataset we don't need to add restrictions on rows or columns, but in datasets with columns -- especially those with many string columns -- you might not be able to read in your whole dataset at once.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import React from \"react\";\nimport GATSBY_COMPILED_MDX from \"/Users/kyle/github/kylebarron/kylebarron.github.io/content/posts/reading-stata-files-with-python.mdx\";\nimport PostComponent, {Head} from \"../components/post\";\nPostComponent\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostComponent, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport {Head};\nconst query = \"2040642971\";\n"],"names":["r","default","e","t","n","o","s","Object","keys","reduce","includes","c","block","i","children","math","a","renderToString","assign","displayMode","errorColor","throwOnError","renderError","settings","createElement","dangerouslySetInnerHTML","__html","ParseError","TypeError","message","propTypes","string","bool","func","object","memo","module","exports","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","number","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","_ref","post","shadow","map","v","data","jsx","Layout","Heading","as","variant","title","sx","color","mt","fontSize","date","tags","React","ItemTags","timeToRead","my","borderRadius","boxShadow","join","PostFooter","Head","_ref2","_post$banner","_post$banner$childIma","_post$banner$childIma2","Seo","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","slug","canonicalUrl","MinimalBlogCorePost","Post","tagsPath","basePath","useMinimalBlogConfig","tag","key","Link","_t$styles","styles","to","replaceSlashes","site","useSiteMetadata","siteTitle","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix","_createMdxContent","_components","p","code","pre","em","_provideComponents","components","className","TeX","wrapper","MDXLayout","GatsbyMDXWrapper","PostComponent","GATSBY_COMPILED_MDX"],"sourceRoot":""}