{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/blog/new-website","result":{"data":{"post":{"__typename":"MdxPost","id":"ce53dd25-199f-50e8-a3c2-0b401bee1e98","slug":"/blog/new-website","title":"New Website","date":"February 17th, 2020","tags":null,"description":"Moving to GatsbyJS.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"New Website\",\n  \"date\": \"2020-02-17T00:00:00.000Z\",\n  \"slug\": \"/blog/new-website\",\n  \"description\": \"Moving to GatsbyJS.\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"After a few years of having a semi-dead \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://jekyllrb.com/\"\n  }), \"Jekyll\"), \"-based website, I'm happy to transition to a new website based on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.gatsbyjs.org/\"\n  }), \"GatsbyJS\"), \".\"), mdx(\"p\", null, \"I'm excited for this switch because I can incorporate some cool new technologies\\ninto the site. For example, \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/kylebarron/kylebarron.github.io/blob/source/content/posts/new-website/index.mdx\"\n  }), \"this post\"), \" is written in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://mdxjs.com/\"\n  }), mdx(\"em\", {\n    parentName: \"a\"\n  }, \"MDX\")), \",\\nwhich allows you to combine the simplicity of Markdown with the flexibility of\\nReact.\"), mdx(\"p\", null, \"For example, I can have editable code snippets that accept updates from the user, like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"react-live\",\n    \"react-live\": true\n  }), \"const onClick = () => {\\n  alert(\\\"Change this text\\\");\\n};\\nrender(<button onClick={onClick}>Click me!</button>);\\n\")), mdx(\"p\", null, \"Update \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Change this text\"), \", click the button, and you can see the text you just\\nput in!\"), mdx(\"p\", null, \"I'm using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.gatsbyjs.org/starters/lekoarts/gatsby-starter-minimal-blog/\"\n  }), \"this starter\"), \", which helped to get everything set up.\\nThe website is hosted on Github Pages, and builds and deploys automatically on\\nevery new commit using Travis CI, so I can just write and commit! Everything is\\nopen source at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/kylebarron/kylebarron.github.io\"\n  }), \"https://github.com/kylebarron/kylebarron.github.io\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"After a few years of having a semi-dead  Jekyll -based website, I'm happy to transition to a new website based on  GatsbyJS . I'm excitedâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/blog/new-website","formatString":"MMMM Do, YYYY"}}}