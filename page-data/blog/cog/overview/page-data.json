{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/blog/cog/overview","result":{"data":{"post":{"__typename":"MdxPost","id":"9801bb06-dd51-596e-9bc6-72838a0de22a","slug":"/blog/cog/overview","title":"Dynamic map tiling with Cloud-Optimized GeoTIFFs","date":"May 9th, 2020","tags":[{"name":"Cloud-optimized GeoTIFF","slug":"cloud-optimized-geo-tiff"},{"name":"Serverless","slug":"serverless"},{"name":"Map tiles","slug":"map-tiles"}],"description":"There's a new way to serve a basemap.","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Dynamic map tiling with Cloud-Optimized GeoTIFFs\",\n  \"date\": \"2020-05-09T00:00:00.000Z\",\n  \"slug\": \"/blog/cog/overview\",\n  \"description\": \"There's a new way to serve a basemap.\",\n  \"tags\": [\"Cloud-optimized GeoTIFF\", \"Serverless\", \"Map tiles\"],\n  \"banner\": \"./awspds_readme_screenshot.png\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"./awspds_readme_screenshot.png\",\n    \"alt\": \"Dynamic tiling of Landsat data. Credit @_VincentS_\"\n  }))), mdx(\"h2\", {\n    \"id\": \"overview\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#overview\",\n    \"aria-label\": \"overview permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Overview\"), mdx(\"p\", null, \"There's a new way to serve a raster basemap.\"), mdx(\"p\", null, \"Historically, the barrier to entry to serving a basemap of aerial imagery was\\nquite high. You had have access to high quality satellite imagery, the compute\\npower to preprocess those images into the right format for the web, the storage\\ncapability to store all that data, and the server capability to handle spikes in\\ntraffic.\"), mdx(\"p\", null, \"All that has changed.\"), mdx(\"p\", null, \"With the advent of serverless computing, the\\nCloud-Optimized GeoTIFF (COG) format, and large public repositories of such\\ndata, serving large collections of imagery is being democratized. It's now\\npossible to serve a basemap of imagery from a collection of terabytes of\\nimagery, quickly, cheaply, and easily.\"), mdx(\"p\", null, \"In this post, I present an outline of this new ecosystem, and lay the groundwork\\nfor future blog posts where I put this theory into practice, and show how to\\nimplement these tools with existing, open data sets.\"), mdx(\"h2\", {\n    \"id\": \"cloud-optimized-geotiffs\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#cloud-optimized-geotiffs\",\n    \"aria-label\": \"cloud optimized geotiffs permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Cloud-Optimized GeoTIFFs\"), mdx(\"p\", null, \"As described on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.cogeo.org/\"\n  }), \"cogeo.org\"), \":\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"A Cloud Optimized GeoTIFF (COG) is a regular GeoTIFF file, aimed at being hosted on a HTTP file server, with an internal organization that enables more efficient workflows on the cloud. It does this by leveraging the ability of clients issuing \\u200BHTTP GET range requests to ask for just the parts of a file they need.\")), mdx(\"p\", null, \"This new format is at the core of dynamic tiling. By making use of its internal\\nimage \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"overviews\"), \", one can read \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"parts\"), \" of the image over a network roughly in\\nproportion to the amount of data requested. Crucially, these image overviews\\nexist both in space and in resolution. If the top-right corner of an image is\\nneeded at mid-resolution, the client only needs to read the file's inital\\nmetadata to know the exact sequence of bytes it needs to read to get the\\nnecessary data.\"), mdx(\"p\", null, \"There are several large collections of publicly-available COG data, including:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://registry.opendata.aws/landsat-8/\"\n  }), \"Landsat 8\"), \": Worldwide, medium resolution multi-spectral imagery since 2013, with new scenes added daily.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://registry.opendata.aws/naip/\"\n  }), \"NAIP\"), \": High resolution (1-meter and 0.6-meter) true color \\\"leaf-on\\\" imagery for the continental 48 U.S. states, taken at regular intervals since 2013. Most states have been imaged four times since 2013.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://registry.opendata.aws/modis-astraea/\"\n  }), \"MODIS\"), \": Worldwide, low resolution multi-spectral imagery captured by the MODIS satellite.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://registry.opendata.aws/cbers/\"\n  }), \"CBERS\"), \": Medium resolution imagery captured by the China-Brazil Earth Resources Satellite. It doesn't have worldwide coverage, however.\")), mdx(\"p\", null, \"NAIP, MODIS, and CBERS imagery is stored in requester-pays buckets, which means\\nthat the requester pays the cost of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GET\"), \" request and the data transfer, but\\nas we'll see in future blog posts, this is a small cost as long as the tiler is\\nlocated in the same region as the data.\"), mdx(\"p\", null, \"Additionally, high-resolution USGS elevation data \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.usgs.gov/news/usgs-digital-elevation-models-dem-switching-new-distribution-format\"\n  }), \"is being\\nconverted\"), \" to COG, with expected launch in 2020, and there are\\nrumors that Sentinel 2 data may be available in COG in the future.\"), mdx(\"h2\", {\n    \"id\": \"mosaicjson\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#mosaicjson\",\n    \"aria-label\": \"mosaicjson permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"MosaicJSON\"), mdx(\"h2\", {\n    \"id\": \"serverless-computing\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#serverless-computing\",\n    \"aria-label\": \"serverless computing permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Serverless Computing\"), mdx(\"h2\", {\n    \"id\": \"ecosystem\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#ecosystem\",\n    \"aria-label\": \"ecosystem permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Ecosystem\"), mdx(\"p\", null, \"Over the last few months, I've been investing time in projects in this ecosystem\\nto help \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/_vincents_\"\n  }), \"Vincent Sarago\"), \" and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/geospatial-jeff\"\n  }), \"Jeff Albrecht\"), \"\\ndevelop an ecosystem of tools to make dynamic tiling fast and reliable.\"), mdx(\"p\", null, \"I've invested some time in the last facilitate developing this ecosystem\"), mdx(\"p\", null, \"There are several interrelated tools. It's easy to get them confused.\"), mdx(\"p\", null, \"Here's an overview of the ecosystem.\"), mdx(\"h4\", {\n    \"id\": \"rio-tiler\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#rio-tiler\",\n    \"aria-label\": \"rio tiler permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"rio-tiler\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/cogeotiff/rio-tiler\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"rio-tiler\")), \" is at the core of the ecosystem. It's a library whose\\nmain purpose is to create a mercator tile from a given input image. In contrast\\nto some of the following libraries, it takes a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"single\"), \" input path and returns a\\n\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"single\"), \" output image. It forms the core of some other libraries.\"), mdx(\"p\", null, \"With the \\\"standard\\\" tiler, you provide a path to a COG image and a standard\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"xyz\"), \" mercator tile, and it returns data for that mercator tile. Specifically,\\nit returns \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"two objects\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"data\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mask\"), \", which allow you to ascertain what\\nportions of the mercator tile are not covered by the source image. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"rio-tiler\"), \"\\nalso includes some \\\"mission-specific\\\" tilers for Landsat 8, Sentinel 1 and 2,\\nand CBERS. These allow you to pass an \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"identifier\"), \" to a satellite scene, and the\\ntiler will find the data corresponding to that scene on AWS S3.\"), mdx(\"h4\", {\n    \"id\": \"rio-tiler-mosaic\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#rio-tiler-mosaic\",\n    \"aria-label\": \"rio tiler mosaic permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"rio-tiler-mosaic\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/cogeotiff/rio-tiler-mosaic\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"rio-tiler-mosaic\"))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Works with multiple assets. When takes a list of assets that are \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"already known\"), \" to overlap with the tile. This is a core difference between this and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cogeo-mosaic\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cogeo-mosaic-tiler\"), \". Since this doesn't interact with the MosaicJSON directly, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rio-tiler-mosaic\"), \" doesn't know how to \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"find\"), \" the right combination of assets to tile together.\")), mdx(\"p\", null, \"Takes a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"tiler\"), \" from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"rio-tiler\"), \". This is an easy plugin system, and thus lets\\nyou create a mercator tile from either the standard tiler or a mission-specific\\ntiler easily.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"still doesn't konw a\")), mdx(\"h4\", {\n    \"id\": \"cogeo-mosaic\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#cogeo-mosaic\",\n    \"aria-label\": \"cogeo mosaic permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"cogeo-mosaic\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/developmentseed/cogeo-mosaic\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"cogeo-mosaic\"))), mdx(\"p\", null, \"Library to create the MosaicJSON and load it from various \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"backends\"), \". In the upcoming 3.0 release, new support exists for storing a MosaicJSON in a variety of locations, including in a DynamoDB table. For large mosaics, DynamoDB is significantly faster than loading a JSON file from S3.\"), mdx(\"h4\", {\n    \"id\": \"cogeo-mosaic-tiler\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#cogeo-mosaic-tiler\",\n    \"aria-label\": \"cogeo mosaic tiler permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"cogeo-mosaic-tiler\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/developmentseed/cogeo-mosaic-tiler\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"cogeo-mosaic-tiler\"))), mdx(\"p\", null, \"Web server designed to be put on AWS Lambda. Thin wrapper to associate HTTP endpoints to code in other packages.\"), mdx(\"p\", null, \"For example, the image endpoint essentially just loads a given MosaicJSON using\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cogeo-mosaic\"), \", finding asset identifiers for a specific mercator tile. Then it\\npasses those assets to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"rio-tiler-mosaic\"), \" using the standard tiler from\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"rio-tiler\"), \".\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/developmentseed/awspds-mosaic\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"awspds-mosaic\")), \" is a fork of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cogeo-mosaic-tiler\"), \" to support\\ndynamidc tiling of Landsat 8 data stored on AWS as a public data set. Landsat 8\\nimagery has some custom needs because data are stored in individual bands that\\nneed to be combined into a single image. Essentially replicates\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cogeo-mosaic-tiler\"), \" except that it passes the mission specific Landsat 8 tiler\\nfrom \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"rio-tiler\"), \" to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tiler\"), \" parameter of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"rio-tiler-mosaic\"), \"'s\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mosaic_tiler\"), \".\"), mdx(\"h4\", {\n    \"id\": \"rio-cogeo\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h4\"\n  }, {\n    \"href\": \"#rio-cogeo\",\n    \"aria-label\": \"rio cogeo permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"rio-cogeo\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/cogeotiff/rio-cogeo\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"rio-cogeo\")), \" is a library to facilitate \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"creating COGs\"), \". It's rare\\nthat I use it because I'm generally tiling COGs that already exist publicly on\\nS3, and thus I don't need to create new COGs.\"), mdx(\"h2\", {\n    \"id\": \"references\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#references\",\n    \"aria-label\": \"references permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"References\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Overview There's a new way to serve a raster basemap. Historically, the barrier to entry to serving a basemap of aerial imagery was\nquite…","timeToRead":4,"banner":null}},"pageContext":{"slug":"/blog/cog/overview","formatString":"MMMM Do, YYYY"}}}